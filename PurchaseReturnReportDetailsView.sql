DROP VIEW IF EXISTS [PurchaseReturnReportDetailsView];
create view IF NOT EXISTS PurchaseReturnReportDetailsView
AS 
select ROW_NUMBER () OVER () RowNum,A.*, 
IFNULL(B.paymentMode, 'CREDIT') as PAYMENTMODE,
ifnull(B.amount,0) as AmountPaid, 0 as StateCode

FROM
(
SELECT
   pURCHASEORDERS.id as ID,
   PurchaseOrders.orderDate AS ORDERDATE,
   (
      select
         IFNULL(DISTRIBUTORS.GSTIN, '') 
      from
         DISTRIBUTORS 
      where
         DISTRIBUTORS.PHONE = PuRCHASEORDERS.DISTRIBUTORPHONE
   )
   as GSTIN,
   (
      select
         IFNULL(DISTRIBUTORS.NAME, '') 
      from
         DISTRIBUTORS 
      where
         DISTRIBUTORS.PHONE = PuRCHASEORDERS.DISTRIBUTORPHONE
   )
   as NAME,
   IFNULL(pURCHASEORDERS.DISTRIBUTORINVOICENO, '') as DISTRIBUTORINVOICENO,
   IFNULL(PuRCHASEORDERS.ISMEMO, '') as ISMEMO,
   SUBSTR( strftime('%Y-%m-%d', 
   (
      PurchaseOrders.poDate
   )
   / 10000000 - 62135596800, 'unixepoch', 'localtime') , 0, 11 ) as CREATEDAT,
   IFNULL(PuRCHASEORDERDETAILS.HSNCODE, '') as HSNCODE,
      IFNULL(IFNULL(Products.userDefinedBarCode ,Products.barcode),'-') as BARCODE,
IFNULL(PuRCHASEORDERDETAILS.NAME, '') as PRODUCTNAME,
   IFNULL(ROUND(NETAMOUNT / 100.0, 2), 0)+IFNULL(ROUND(deliveryCharges / 100.0, 2), 0) as NETAMOUNT,
   IFNULL(ROUND(DELIVERYCHARGES / 100.0, 2), 0) as DELIVERYCHARGES, 
   PURCHASEORDERDETAILS.poNumber AS PONUMBER,  
	CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN            	 
          PuRCHASEORDERDETAILS.returnedQuantity / 1000.0 
         ELSE
            PuRCHASEORDERDETAILS.returnedQuantity 
      END as RETURNEDQUANTITY, 
  CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN            	 
            PuRCHASEORDERDETAILS.acceptedQuantity / 1000.0
         ELSE
            PuRCHASEORDERDETAILS.acceptedQuantity  
      END as ACTUALQUANTITY, 
	 CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN
            PuRCHASEORDERDETAILS.freeQuantity / 1000.0
         ELSE
            PuRCHASEORDERDETAILS.freeQuantity  
      END as FREEQUANTITY, 
	   CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN
            PuRCHASEORDERDETAILS.receivedQuantity / 1000.0 
         ELSE
            PuRCHASEORDERDETAILS.receivedQuantity 
      END
    as RECEIVEDQUANTITY,
	 CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' 
         THEN
            'KG'
			WHEN
            PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN
            'L'
		ELSE
		PuRCHASEORDERDETAILS.UOM 
		END as UOM,
   CASE
      WHEN
         PuRCHASEORDERS.ISPRICEEXCLUSIVE = 0
      THEN	  
     IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.TOTALAMOUNT) / 100.0, 2), 0)-IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.IGSTAMOUNT) / 100.0, 2),0)-IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.SGSTAMOUNT) / 100.0, 2), 0)-IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.CGSTAMOUNT) / 100.0, 2), 0)-IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.CESSAMOUNT) / 100.0, 2), 0)-IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.ADDITIONALCESSAMOUNT) / 100.0, 2), 0)- IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.BILLITEMSPLITDISCOUNT) / 100.0, 2), 0)
      WHEN
	  PuRCHASEORDERS.ISPRICEEXCLUSIVE = 1 
      THEN	  
         IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.TOTALAMOUNT) / 100.0, 2), 0) - IFNULL(ROUND(ABS(PuRCHASEORDERDETAILS.BILLITEMSPLITDISCOUNT) / 100.0, 2), 0) 
      END

   AS TT, PuRCHASEORDERDETAILS.SGSTRATE as SGSTRATE, CAST (IFNULL(ROUND(PuRCHASEORDERDETAILS.SGSTAMOUNT / 100.0, 2), 0) AS VARCHAR(10)) AS SGSTAMOUNT, PuRCHASEORDERDETAILS.CGSTRATE as CGSTRATE, CAST (IFNULL(ROUND(PuRCHASEORDERDETAILS.CGSTAMOUNT / 100.0, 2), 0) AS VARCHAR(10)) AS CGSTAMOUNT, PuRCHASEORDERDETAILS.IGSTRATE as IGSTRATE, CAST (IFNULL(ROUND(PuRCHASEORDERDETAILS.IGSTAMOUNT / 100.0, 2), 0) AS VARCHAR(10)) AS IGSTAMOUNT, PuRCHASEORDERDETAILS.CESSRATE as CESSRATE, PuRCHASEORDERDETAILS.ADDITIONALCESSRATE as ADDITIONALCESSRATE, CAST (IFNULL(ROUND(PuRCHASEORDERDETAILS.CESSAMOUNT / 100.0, 2), 0) AS VARCHAR(10)) AS CESSAMOUNT, CAST (IFNULL(ROUND(PuRCHASEORDERDETAILS.ADDITIONALCESSAMOUNT / 100.0, 2), 0) AS VARCHAR(10)) AS ADDITIONALCESSAMOUNT, IFNULL(PuRCHASEORDERDETAILS.UOM, '') as UOM, 
   (
      CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN
            PuRCHASEORDERDETAILS.RECEIVEDQUANTITY / 1000.0
         ELSE
            PuRCHASEORDERDETAILS.RECEIVEDQUANTITY  
      END
   )
   as PCRECEIVEDQUANTITY, IFNULL(ROUND(PuRCHASEORDERDETAILS.PURCHASEPRICE / 100.0, 2), 0 ) as PURCHASEPRICE, pURCHASEORDERS.DISTRIBUTORPHONE as DISTRIBUTORPHONE, pURCHASEORDERS.ISGST as ISGST, pURCHASEORDERS.ISSYNC as ISSYNC, 
   CASE
      WHEN
         PuRCHASEORDERDETAILS.PRODUCTCODE = - 1 
      THEN
         '-' 
      ELSE
         PuRCHASEORDERDETAILS.PRODUCTCODE 
   END
   AS PRODUCTCODE, PuRCHASEORDERDETAILS.MEASURE as MEASURE, IFNULL(ROUND(PuRCHASEORDERDETAILS.MRP / 100.0, 2), 0) as MRP, 
   CASE
         WHEN
            PuRCHASEORDERDETAILS.UOM = 'G' or PuRCHASEORDERDETAILS.UOM = 'ML' 
         THEN
            IFNULL(ROUND(PuRCHASEORDERDETAILS.TOTALAMOUNT / 100000.0, 2), 0) 
         ELSE
            IFNULL(ROUND(PuRCHASEORDERDETAILS.TOTALAMOUNT / 100.0, 2), 0)
      END
   
    AS ITEMTOTALAMOUNT, 
   CASE
      WHEN
         pURCHASEORDERS.ISGST = 1 
      THEN
         NULL 
      ELSE
         PuRCHASEORDERDETAILS.VATRATE 
   END
   AS ITEMVATRATE, 
   CASE
      WHEN
         pURCHASEORDERS.ISGST = 1 
      THEN
         NULL 
      ELSE
         IFNULL(ROUND(PuRCHASEORDERDETAILS.VATAMOUNT / 100.0, 2), 0) 
   END
   AS ITEMVATAMOUNT, pURCHASEORDERS.TOTALQUANTITY as TOTALQUANTITY, pURCHASEORDERS.TOTALITEMS as TOTALITEMS, IFNULL(ROUND(PENDINGAMOUNT / 100.0, 2), 0) as PENDINGAMOUNT, IFNULL(ROUND(PuRCHASEORDERS.netAmount / 100.0, 2), 0) AS PURCHASEORDERSTOTALAMOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALDISCOUNT / 100.0, 2), 0) as TOTALDISCOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALVAT / 100.0, 2), 0) as TOTALVAT, IFNULL(ROUND(pURCHASEORDERS.TOTALSGSTAMOUNT / 100.0, 2), 0) as TOTALSGSTAMOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALCGSTAMOUNT / 100.0, 2), 0) as TOTALCGSTAMOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALIGSTAMOUNT / 100.0, 2), 0) as TOTALIGSTAMOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALCESSAMOUNT / 100.0, 2), 0) as TOTALCESSAMOUNT, IFNULL(ROUND(pURCHASEORDERS.TOTALADDITIONALCESSAMOUNT / 100.0, 2), 0) as TOTALADDITIONALCESSAMOUNT 
FROM
   PuRCHASEORDERS 
   INNER JOIN
      PuRCHASEORDERDETAILS 
      ON pURCHASEORDERS.id = pURCHASEORDERDETAILS.PONUMBER 
	  left join Products on PurchaseOrderDetails.productCode=Products.productCode
WHERE
   pURCHASEORDERS.iSDELETED = 0  and isReturn=1
GROUP BY
   PuRCHASEORDERDETAILS.id 
ORDER BY
   PuRCHASEORDERS.ORDERDATE ASC , PuRCHASEORDERS.CREATEDAT ASC
   ) A
   LEFT JOIN
   (
SELECT ponumber,group_concat(paymentmode) as paymentmode, sum(amount)/100.00 as amount FROM
(
SELECT ponumber as ponumber,
CASE
    WHEN paymentMode = 'CASH' THEN paymentMode
        WHEN paymentMode = 'CHEQUE' THEN paymentMode
WHEN paymentMode = 'CARD' THEN transactionType
    ELSE paymentBankName
END AS paymentmode, amount
FROM DISTRIBUTORPAYMENTS   
) GROUP by poNumber
   ) B
   on A.poNumber=B.poNumber
