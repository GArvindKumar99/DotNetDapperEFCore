CREATE PROCEDURE [dbo].[AttachVRfidToCustomerNew]
	-- Add the parameters for the stored procedure here
	@CustomerId int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @freeVRFIDId NVARCHAR(50)

	-- Check if the customer doesn't have any VRFID (meaning the whole database doesn't have a free VRFID)
	IF NOT EXISTS (SELECT TOP 1 1 FROM OfficeRFIDs WHERE CustomerId = @CustomerId AND RFID LIKE 'VR%')
	BEGIN
		-- Find a free VRFID
		SELECT TOP 1 @freeVRFIDId = RFID
		FROM OfficeRFIDs
		WHERE CustomerId IS NULL

		-- If a free VRFID is found, perform the desired action
		IF @freeVRFIDId IS NOT NULL
		BEGIN
			-- Update the status of the free VRFID to indicate that it is active
			UPDATE TOP (1) OfficeRFIDs
			SET CustomerId = @CustomerId, IsActive = 0
			WHERE RFID = @freeVRFIDId
		END
		ELSE
		BEGIN
			-- Generate a new VRFID ID
			DECLARE @LastVR NVARCHAR(MAX)
			DECLARE @NewVR NVARCHAR(MAX)
			DECLARE @NewRFIDName NVARCHAR(MAX)

			SET @LastVR = (SELECT TOP 1 RFID FROM OfficeRFIDs WHERE RFID LIKE 'VR%' ORDER BY Id DESC);
			SET @NewVR = CONCAT('VR', RIGHT('0000' + CAST((CAST(SUBSTRING(@LastVR, 3, 11) AS INT) + 1) AS NVARCHAR), 4));
			SET @NewRFIDName = CONCAT('VR.972.001.0000', SUBSTRING(@NewVR, 7, 11));

			-- Insert the new VRFID into the OfficeRFIDs table with the specified customer and isactive = 0
			INSERT INTO OfficeRFIDs (RFID, Type, RFIDName, CustomerId, RegisterDate, LastUpdate, IsActive, IsDefault, IsExpired, CardId, DateExpired, Comment)
			VALUES (@NewVR, 'GN1', @NewRFIDName, @CustomerId, GETUTCDATE(), GETUTCDATE(), 0, 0, NULL, @NewRFIDName, NULL, NULL)
		END
	END
END
